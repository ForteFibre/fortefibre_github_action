ARG ROS_DISTRO=humble
ARG BASE_IMAGE
ARG PACKAGE_XML=package.xml

FROM $BASE_IMAGE as build_stage

ENV DEBIAN_FRONTEND=noninteractive

RUN rm /etc/apt/sources.list.d/ros2-latest.list \
  && rm /usr/share/keyrings/ros2-latest-archive-keyring.gpg
RUN apt-get update \
  && apt-get install -y ca-certificates curl

RUN export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F "tag_name" | awk -F\" '{print $4}') ;\
  curl -L -s -o /tmp/ros2-apt-source.deb "https://github.com/ros-infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/ros2-apt-source_${ROS_APT_SOURCE_VERSION}.$(. /etc/os-release && echo "$VERSION_CODENAME")_all.deb" \
  && apt-get update \
  && apt-get install -y /tmp/ros2-apt-source.deb \
  && rm -f /tmp/ros2-apt-source.deb

RUN --mount=type=cache,target=/var/lib/apt,sharing=private apt-get update && \
  apt-get install -y \
  python3-vcstool git python3-colcon-common-extensions python3-colcon-mixin python3-rosdep \
  python3-bloom python3-pip fakeroot \
  debhelper git gpg dh-python unzip gcovr && \
  if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]; then rosdep init; fi

RUN mkdir -p /tmp/ws/meta
COPY ${PACKAGE_XML} /tmp/ws/meta/package.xml
COPY rosdep.yaml /tmp/ws/rosdep.yaml

RUN --mount=type=cache,target=/var/lib/apt,sharing=private \
  echo "yaml file:///tmp/ws/rosdep.yaml" > /etc/ros/rosdep/sources.list.d/61-customized-rosdep.list \
  && apt-get update \
  && rosdep update \
  && rosdep install --from-paths /tmp/ws --ignore-src --rosdistro ${ROS_DISTRO} -y \
  && rm /etc/ros/rosdep/sources.list.d/61-customized-rosdep.list

RUN --mount=type=cache,target=/var/lib/apt,sharing=private apt-get update && \
  apt-get install -y python3-colcon-lcov-result python3-colcon-coveragepy-result lcov

ENV ROS_DISTRO=${ROS_DISTRO}

COPY scripts/ /scripts/
RUN chmod +x /scripts/entrypoint.bash

ENTRYPOINT [ "/scripts/entrypoint.bash" ]
