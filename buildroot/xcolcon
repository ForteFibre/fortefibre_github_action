#!/bin/bash

set -eo pipefail

if [ ! -f /proc/sys/fs/binfmt_misc/qemu-aarch64 ]; then
    docker run --privileged --rm tonistiigi/binfmt --install all
fi

TARGET_DIR=${TARGET_DIR:-$PWD}
BASE_IMAGE=ghcr.io/fortefibre/buildroot:$ROS_DISTRO-aarch64
PLATFORM=linux/arm64
BASE_OPTS="-v $PWD/src:$TARGET_DIR/src -v $PWD/xbuild:$TARGET_DIR/build \
    -v $PWD/xinstall:$TARGET_DIR/install -w $TARGET_DIR \
    -e ORIG_UID=$(id -u) -e ORIG_GID=$(id -g) \
    -it --platform $PLATFORM"
CUSTOM_IMAGE=fortefibre/buildroot:$ROS_DISTRO-aarch64-custom

# Pull base image if not present
docker image inspect $BASE_IMAGE > /dev/null 2>&1 || docker pull --platform $PLATFORM $BASE_IMAGE

set +e
# Determine image to use
docker image inspect $CUSTOM_IMAGE > /dev/null 2>&1
if [ $? -ne 0 ]; then
    IMAGE=$BASE_IMAGE
else
    IMAGE=$CUSTOM_IMAGE
fi
set -e

if [ "$1" = 'installdeps' ]; then
    CUSTOM_IMAGE_TEMP=fortefibre/buildroot:$ROS_DISTRO-aarch64-custom-temp
    # Stash the current image
    docker tag $IMAGE $CUSTOM_IMAGE_TEMP
    docker run --cidfile .xcolcon-cid $BASE_OPTS --entrypoint /bin/bash $IMAGE -c "apt-get update && rosdep update && rosdep install -i --from-paths . -y"
    docker commit \
        --change 'ENTRYPOINT [ "/scripts/entrypoint.bash" ]' \
        --change 'CMD []' \
        $(cat .xcolcon-cid) $CUSTOM_IMAGE
    docker rm $(cat .xcolcon-cid)
    rm .xcolcon-cid
    docker rmi $CUSTOM_IMAGE_TEMP
    exit
elif [ "$1" = 'update' ]; then
    docker rmi $CUSTOM_IMAGE || true
    docker pull --platform $PLATFORM $BASE_IMAGE
    exit
fi

echo "Using $IMAGE as base image. Target directory: $TARGET_DIR."

docker run --rm $BASE_OPTS $IMAGE "$@"