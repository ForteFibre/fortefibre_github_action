#!/bin/bash

set -eo pipefail

if [ -z "$ROS_DISTRO" ]; then
    echo "ROS_DISTRO is not set. Did you forget to source /opt/ros/<distro>/setup.bash?"
    exit 1
fi

RSYNC_OPTS="-a --copy-links --progress"
PLATFORM=linux/arm64
BASE_IMAGE=ghcr.io/fortefibre/buildroot-small:$ROS_DISTRO-aarch64
CUSTOM_IMAGE=fortefibre/buildroot:$ROS_DISTRO-aarch64-custom

# 引数解析
while (( $# > 0 )); do
    case "$1" in
        -t|--target-dir)
            TARGET_DIR=$2
            shift 2
            ;;
        --rsync)
            RSYNC_TARGET=$2
            shift 2
            ;;
        --rsync-opts)
            RSYNC_OPTS=$2
            shift 2
            ;;
        --precheck)
            which docker > /dev/null && RET=$? || RET=$?
            if [ $RET -ne 0 ]; then
                echo "Docker is not installed, installing..."
                sudo apt-get install ca-certificates curl
                curl -fsSL https://get.docker.com | sh
                sudo usermod -aG docker $USER
                echo "Docker installed, reboot your PC and re-run the script"
                exit 1
            fi
            which rsync > /dev/null && RET=$? || RET=$?
            if [ $RET -ne 0 ]; then
                echo "Rsync is not installed, installing..."
                sudo apt-get install rsync
            fi
            exit
            ;;
        --update)
            docker rmi $CUSTOM_IMAGE || true
            docker pull --platform $PLATFORM $BASE_IMAGE
            exit
            ;;
        *)
            break
            ;;
    esac
done

if [ -n "$RSYNC_TARGET" ]; then
    RSYNC_TARGET_HOST=$(echo $RSYNC_TARGET | cut -d: -f1)
    RSYNC_TARGET_DIR=$(echo $RSYNC_TARGET | cut -d: -f2)
    RSYNC_TARGET_DIR=${RSYNC_TARGET_DIR%/}
    if [ -z "$RSYNC_TARGET_HOST" ] || [ -z "$RSYNC_TARGET_DIR" ]; then
        echo "Invalid rsync target: $RSYNC_TARGET"
        exit 1
    fi
    TARGET_DIR=$RSYNC_TARGET_DIR
    echo "Rsync target: $RSYNC_TARGET_HOST:$RSYNC_TARGET_DIR/install/"
fi

if [ ! -d "$PWD/src" ]; then
    echo "No source directory found in $PWD"
    exit 1
fi

if [ ! -f /proc/sys/fs/binfmt_misc/qemu-aarch64 ]; then
    docker run --privileged --rm tonistiigi/binfmt --install all
fi

TARGET_DIR=${TARGET_DIR:-$PWD}
BASE_OPTS="-v $PWD/src:$TARGET_DIR/src -v $PWD/xbuild:$TARGET_DIR/build \
    -v $PWD/xinstall:$TARGET_DIR/install -w $TARGET_DIR \
    -e ORIG_UID=$(id -u) -e ORIG_GID=$(id -g) \
    -it --platform $PLATFORM"

# Pull base image if not present
docker image inspect $BASE_IMAGE > /dev/null 2>&1 || docker pull --platform $PLATFORM $BASE_IMAGE

# Determine image to use
docker image inspect $CUSTOM_IMAGE > /dev/null 2>&1 && RET=$? || RET=$?
if [ $RET -ne 0 ]; then
    IMAGE=$BASE_IMAGE
else
    IMAGE=$CUSTOM_IMAGE
fi

customize_image() {
    if [ -f .xcolcon-cid ]; then
        docker rm $(cat .xcolcon-cid) || true
        rm .xcolcon-cid
    fi
    CUSTOM_IMAGE_TEMP=fortefibre/buildroot:$ROS_DISTRO-aarch64-custom-temp
    # Stash the current image
    docker tag $IMAGE $CUSTOM_IMAGE_TEMP
    docker run --cidfile .xcolcon-cid $BASE_OPTS --entrypoint /bin/bash -it $IMAGE -c "$1"
    docker commit \
        --change 'ENTRYPOINT [ "/scripts/entrypoint.bash" ]' \
        --change 'CMD []' \
        $(cat .xcolcon-cid) $CUSTOM_IMAGE
    docker rm $(cat .xcolcon-cid)
    rm .xcolcon-cid
    docker rmi $CUSTOM_IMAGE_TEMP
}

if [ "$1" = 'installdeps' ]; then
    customize_image "apt-get update && rosdep update && rosdep install -i --from-paths . -y"
    exit
fi

if [ "$1" = 'custom' ]; then
    customize_image /bin/bash
    exit
fi

if [ "$1" = 'addrosdep' ]; then
    if [ -z "$2" ]; then
        echo "Usage: $0 addrosdep <rosdep list line>"
        exit 1
    fi
    customize_image "echo $2 | tee -a /etc/ros/rosdep/sources.list.d/70-customized-rosdep.list"
    exit
fi

echo "Using $IMAGE as base image / Target directory: $TARGET_DIR"

docker run --rm $BASE_OPTS $IMAGE "$@"

if [ -n "$RSYNC_TARGET" ]; then
    rsync $RSYNC_OPTS $PWD/xinstall/ $RSYNC_TARGET_HOST:$RSYNC_TARGET_DIR/install/
fi
